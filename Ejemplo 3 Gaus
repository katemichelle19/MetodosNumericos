
####Java

```java
public class GaussJordan {
    public static void main(String[] args) {
        double[][] matriz = {
            {2, 1, -1, 8},
            {-3, -1, 2, -11},
            {-2, 1, 2, -3}
        };

        gaussJordan(matriz);

        System.out.println("Solución:");
        for (int i = 0; i < matriz.length; i++) {
            System.out.println("x" + (i+1) + " = " + matriz[i][matriz[i].length-1]);
        }
    }

    public static void gaussJordan(double[][] matriz) {
        int n = matriz.length;
        for (int i = 0; i < n; i++) {
            // Encontrar la fila pivote y pivote
            int pivoteFila = i;
            double pivote = matriz[i][i];
            for (int k = i+1; k < n; k++) {
                if (Math.abs(matriz[k][i]) > Math.abs(pivote)) {
                    pivote = matriz[k][i];
                    pivoteFila = k;
                }
            }

            // Intercambiar fila actual con fila pivote
            double[] temp = matriz[i];
            matriz[i] = matriz[pivoteFila];
            matriz[pivoteFila] = temp;

            // Normalizar fila pivote
            for (int j = i+1; j < n+1; j++) {
                matriz[i][j] /= pivote;
            }

            // Eliminación gaussiana
            for (int k = 0; k < n; k++) {
                if (k != i) {
                    double factor = matriz[k][i];
                    for (int j = i; j < n+1; j++) {
                        matriz[k][j] -= factor * matriz[i][j];
                    }
                }
            }
        }
    }
}

```

###FIN :)
