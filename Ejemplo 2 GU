
####Java

`java
clase pública EliminacionGaussiana {

 principal de vacío estático público (cadena [] args) {
 doble[][] matriz = {{2, 1, -1, 8},
 {-3, -1, 2, -11},
 {-2, 1, 2, -3}};
        
 doble [] soluciones = resolverSistema(matriz);
        
 System.out.println("Soluciones:");
 para (int i = 0; i < soluciones.length; i++) {
 System.out.println("x" + (i+1) + " =" soluciones[i]);
        }
    }
    
 doble estático público [] solucionadorSistema(doble [][] matriz) {
 int n = matriz.longitud;
 doble [] soluciones = nuevo doble [n];
        
 // Eliminación hacia adelante
 para (int i = 0; i < n; i++) {
 para (int k = i+1; k < n; k++) {
 factor doble = matriz[k][i] /matriz[i][i];
 para (int j = i; j < n+1; j++) {
 matriz[k][j]-= factor * matriz[i][j];
                }
            }
        }
        
 // Sustitución hacia atrás
 para (int i = n-1; i >= 0; i--) {
 soluciones[i] = matriz[i][n] /matriz[i][i];
 para (int k = i-1; k >= 0; k--) {
 matriz[k][n] -= matriz[k][i] * soluciones[i];
            }
        }
        
 devolver soluciones;
    }
}





`



###FIN :)
